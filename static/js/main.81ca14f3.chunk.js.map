{"version":3,"sources":["utils/globals.ts","hooks/cases.ts","hooks/settings.ts","Country.tsx","hooks/countries.ts","Effects.tsx","Visuals.tsx","utils/theme.ts","icons/fastForward.svg","icons/playArrow.svg","icons/pause.svg","DateSelector.tsx","App.tsx","index.tsx"],"names":["API_DATE_FORMAT","GLOBE_RADIUS","PUBLIC_URL","process","useCases","create","set","countries","loaded","load","a","fetch","response","json","apiData","item","country","newCases","getLoaded","state","getLoad","useSettings","minDate","Date","focusDate","maxDate","subDays","setFocusDate","lonLatToXYZ","lon","lat","phi","Math","PI","theta","x","sin","cos","z","Country","code","outlines","theme","useTheme","countryData","useRef","getState","worldData","date","format","targetColor","THREE","minLevel","maxLevelColor","maxLevel","useEffect","subscribe","current","material","color","meshes","coordinates","vertices","coordinate","xyz","push","geometry","setAttribute","lineProps","length","useFrame","newCasesPerMillionSmoothed","worldNewCasesPerMillionSmoothed","index","lerp","useCountries","rawCountries","map","name","outline","points","polygon","ring","Effects","memo","useDetectGPU","tier","fallback","luminanceThreshold","luminanceSmoothing","intensity","InnerSphere","ref","useThree","raycaster","mouse","scene","res","intersectObject","console","log","args","background","side","transparent","opacity","Visuals","data","useCallback","onCreated","gl","setClearColor","colorManagement","Provider","value","Stars","fade","factor","radius","PerspectiveCamera","makeDefault","near","far","fov","position","OrbitControls","enablePan","minDistance","maxDistance","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","SvgFastForward","_ref","svgRef","title","titleId","props","xmlns","viewBox","width","height","id","ForwardRef","SvgPlayArrow","SvgPause","Container","styled","div","ControlsContainer","Slider","input","TextContainer","DateContainer","Control","button","disabled","PauseIcon","RawPauseIcon","attrs","PlayIcon","RawPlayIcon","FastForwardIcon","RawFastForwardIcon","REVERSE_ICONS","transform","0","1","5","NEXT_REVERSE_SPEED","FORWARD_ICONS","NEXT_FORWARD_SPEED","DateSelector","useState","animationSpeed","setAnimationSpeed","averageNewCases","interval","setInterval","nextDate","addDays","clearInterval","max","differenceInDays","setReverse","speed","setForward","onClick","type","min","onChange","parseInt","round","GlobalStyle","createGlobalStyle","reset","App","useCountryData","useCaseData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81ca14f3.chunk.js","sourcesContent":["export const API_DATE_FORMAT = 'yyyyMMdd'\nexport const WORLD_CODE = 'OWID_WRL'\nexport const GLOBE_RADIUS = 100\nexport const PUBLIC_URL = process.env.PUBLIC_URL\n","import { useEffect } from 'react'\nimport { PUBLIC_URL } from 'utils/globals'\nimport create from 'zustand'\n\ntype DataByDate = Record<string, number>\n\ninterface ApiCountry {\n  country: string\n  newCases: DataByDate\n}\n\nexport type State = {\n  countries: Record<string, DataByDate>\n  loaded: boolean\n  load: () => void\n}\n\nexport const useCases = create<State>((set) => ({\n  countries: {},\n  loaded: false,\n  load: async () => {\n    const response = await fetch(`${PUBLIC_URL}/api/cases.json`)\n    const apiData = (await response.json()) as ApiCountry[]\n    const countries: State['countries'] = {}\n\n    for (const item of apiData) {\n      const { country, newCases } = item\n      countries[country] = newCases\n    }\n\n    set({ countries, loaded: true })\n  },\n}))\n\nconst getLoaded = (state: State) => state.loaded\nconst getLoad = (state: State) => state.load\n\nexport const useCaseData = () => {\n  const loaded = useCases(getLoaded)\n  const load = useCases(getLoad)\n\n  useEffect(() => {\n    if (!loaded) {\n      load()\n    }\n  }, [load, loaded])\n}\n","import subDays from 'date-fns/subDays'\nimport create from 'zustand'\n\nexport type State = {\n  focusDate: Date\n  minDate: Date\n  maxDate: Date\n  setFocusDate: (date: Date) => void\n}\n\nexport const useSettings = create<State>((set) => {\n  const minDate = new Date(2020, 0, 1)\n  const maxDate = subDays(new Date(), 2)\n\n  return {\n    focusDate: minDate,\n    minDate,\n    maxDate,\n    setFocusDate: (focusDate) => set({ focusDate }),\n  }\n})\n","import * as THREE from 'three'\nimport type { Country as CountryData } from 'hooks/countries'\nimport { useCases } from 'hooks/cases'\nimport type { State as CasesState } from 'hooks/cases'\nimport { useSettings } from 'hooks/settings'\nimport type { State as SettingsState } from 'hooks/settings'\nimport { useEffect, useRef } from 'react'\nimport { useFrame } from 'react-three-fiber'\nimport { useTheme } from 'styled-components'\nimport format from 'date-fns/format'\nimport { API_DATE_FORMAT, WORLD_CODE, GLOBE_RADIUS } from 'utils/globals'\n\nconst lonLatToXYZ = (lon: number, lat: number): [number, number, number] => {\n  const phi = (90 - lat) * (Math.PI / 180)\n  const theta = (lon + 180) * (Math.PI / 180)\n\n  const x = -(GLOBE_RADIUS * Math.sin(phi) * Math.cos(theta))\n  const z = GLOBE_RADIUS * Math.sin(phi) * Math.sin(theta)\n  const y = GLOBE_RADIUS * Math.cos(phi)\n\n  return [x, y, z]\n}\n\nexport const Country: React.FC<{ country: CountryData }> = ({ country }) => {\n  const { code, outlines } = country\n\n  const theme = useTheme()\n  const countryData = useRef(useCases.getState().countries[code] || {})\n  const worldData = useRef(useCases.getState().countries[WORLD_CODE] || {})\n  const date = useRef(format(useSettings.getState().focusDate, API_DATE_FORMAT))\n\n  const targetColor = useRef(new THREE.Color(theme.minLevel))\n  const maxLevelColor = new THREE.Color(theme.maxLevel)\n\n  useEffect(\n    () =>\n      useCases.subscribe(\n        (countries: CasesState['countries']) => {\n          countryData.current = countries[code] || {}\n          worldData.current = countries[WORLD_CODE] || {}\n        },\n        (state) => state.countries\n      ),\n    [code]\n  )\n\n  useEffect(\n    () =>\n      useSettings.subscribe(\n        (focusDate: SettingsState['focusDate']) => (date.current = format(focusDate, API_DATE_FORMAT)),\n        (state) => state.focusDate\n      ),\n    [code]\n  )\n\n  const material = new THREE.LineBasicMaterial({ color: theme.minLevel })\n\n  let meshes = []\n\n  for (const outline of outlines) {\n    const { coordinates } = outline\n\n    const vertices = []\n    for (const coordinate of coordinates) {\n      const xyz = lonLatToXYZ(...coordinate)\n      vertices.push(...xyz)\n    }\n\n    const geometry = new THREE.BufferGeometry()\n    geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3))\n\n    const lineProps: any = { geometry, material } // TS thinks this is SVG line element\n\n    meshes.push(<line key={meshes.length} {...lineProps} />)\n  }\n\n  useFrame(() => {\n    const newCasesPerMillionSmoothed = countryData.current[date.current] || 0\n    const worldNewCasesPerMillionSmoothed = worldData.current[date.current] || 0\n\n    let index = 0\n    if (worldNewCasesPerMillionSmoothed > 0) {\n      index = newCasesPerMillionSmoothed / (worldNewCasesPerMillionSmoothed * 7)\n    }\n\n    targetColor.current = new THREE.Color(theme.minLevel).lerp(maxLevelColor, index)\n    material.color.lerp(targetColor.current, 0.1)\n  })\n\n  return <group>{meshes}</group>\n}\n","import { useEffect } from 'react'\nimport create from 'zustand'\nimport map from 'lodash/map'\nimport { PUBLIC_URL } from 'utils/globals'\n\ntype Coordinate = [lon: number, lat: number]\n\ntype MultiPolygon = {\n  type: 'MultiPolygon'\n  coordinates: Coordinate[][][]\n}\n\ntype MultiPoint = {\n  type: 'MultiPoint'\n  coordinates: Coordinate[]\n}\n\ninterface ApiCountry {\n  code: string\n  name: string\n  outline: MultiPolygon\n  points?: MultiPoint\n}\n\ninterface Feature {\n  coordinates: Coordinate[]\n}\n\nexport interface Country {\n  code: string\n  name: string\n  outlines: Feature[]\n  points: Feature\n}\n\ntype State = {\n  countries: Country[]\n  loaded: boolean\n  load: () => void\n}\n\nexport const useCountries = create<State>(\n  (set) => ({\n    countries: [],\n    loaded: false,\n    load: async () => {\n      const response = await fetch(`${PUBLIC_URL}/api/countries.json`)\n      const rawCountries = (await response.json()) as ApiCountry[]\n\n      const countries = map(rawCountries, (country) => {\n        const { code, name, outline, points } = country\n\n        let outlines: Feature[] = []\n\n        for (const polygon of outline.coordinates) {\n          for (const ring of polygon) {\n            outlines.push({ coordinates: ring })\n          }\n        }\n\n        return { code, name, outlines, points: { coordinates: points?.coordinates || [] } }\n      })\n\n      set({ countries, loaded: true })\n    },\n  })\n)\n\nconst getLoaded = (state: State) => state.loaded\nconst getLoad = (state: State) => state.load\n\nexport const useCountryData = () => {\n  const loaded = useCountries(getLoaded)\n  const load = useCountries(getLoad)\n\n  useEffect(() => {\n    if (!loaded) {\n      load()\n    }\n  }, [load, loaded])\n}\n","import React, { memo, Suspense } from 'react'\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport { useDetectGPU } from '@react-three/drei/useDetectGPU'\n\nexport const Effects: React.FC = memo(() => {\n  const { tier } = useDetectGPU() || { tier: 0 }\n\n  if (tier === 0) {\n    return null\n  }\n\n  return (\n    <Suspense fallback={null}>\n      <EffectComposer>\n        <Bloom luminanceThreshold={0.4} luminanceSmoothing={1} intensity={2} key='bloom' />\n      </EffectComposer>\n    </Suspense>\n  )\n})\n","import React, { useCallback, useRef } from 'react'\nimport { Canvas, useFrame, useThree } from 'react-three-fiber'\nimport { useTheme, ThemeContext } from 'styled-components'\nimport map from 'lodash/map'\nimport { Country } from 'Country'\nimport { OrbitControls, Stars } from '@react-three/drei'\nimport { PerspectiveCamera } from '@react-three/drei/PerspectiveCamera'\nimport { useCountries } from 'hooks/countries'\nimport { GLOBE_RADIUS } from 'utils/globals'\nimport { Effects } from 'Effects'\n\nconst InnerSphere = () => {\n  const theme = useTheme()\n  const ref = useRef<any>()\n\n  const { raycaster, mouse, scene } = useThree()\n\n  useFrame(() => {\n    const res = raycaster.intersectObject(ref.current)\n\n    // Spherical.setFromVector3\n      console.log(res)\n\n  })\n\n  return (\n    <mesh ref={ref}>\n      <sphereBufferGeometry args={[GLOBE_RADIUS * 0.99, 100, 100]} />\n      <meshBasicMaterial color={theme.background} side={1} transparent={true} opacity={0.95} />\n    </mesh>\n  )\n}\n\nexport const Visuals = () => {\n  const theme = useTheme()\n\n  const data = useCountries(useCallback((state) => state.countries, []))\n\n  const countries = map(data, (country) => <Country country={country} key={country.code} />)\n\n  return (\n    <Canvas onCreated={({ gl }) => gl.setClearColor(theme.background)} colorManagement={false}>\n      <ThemeContext.Provider value={theme}>\n        <Stars fade factor={10} radius={GLOBE_RADIUS * 3.2} />\n        <ambientLight />\n\n        {countries}\n\n        <InnerSphere />\n\n        <PerspectiveCamera\n          makeDefault\n          near={0.001}\n          far={GLOBE_RADIUS * 10}\n          fov={90}\n          position={[GLOBE_RADIUS * 1.2, GLOBE_RADIUS * 1.2, 0]}\n        />\n\n        <OrbitControls enablePan={false} minDistance={GLOBE_RADIUS * 1.1} maxDistance={GLOBE_RADIUS * 3} />\n\n        <Effects />\n      </ThemeContext.Provider>\n    </Canvas>\n  )\n}\n","export const theme = {\n  background: '#060606',\n  minLevel: '#ffffff',\n  maxLevel: '#ff0000',\n}\n\nexport type Theme = typeof theme\n\ndeclare module 'styled-components' {\n  export interface DefaultTheme extends Theme {}\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 18l8.5-6L4 6v12zm9-12v12l8.5-6L13 6z\"\n});\n\nfunction SvgFastForward(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"white\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFastForward);\nexport default __webpack_public_path__ + \"static/media/fastForward.b7d40603.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n});\n\nfunction SvgPlayArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"white\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlayArrow);\nexport default __webpack_public_path__ + \"static/media/playArrow.b2f4ba6a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n});\n\nfunction SvgPause(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"white\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.9f7d9f6d.svg\";\nexport { ForwardRef as ReactComponent };","import { useSettings } from 'hooks/settings'\nimport styled from 'styled-components'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport addDays from 'date-fns/addDays'\nimport format from 'date-fns/format'\nimport { useCases } from 'hooks/cases'\nimport { useCallback, useEffect, useState } from 'react'\nimport { WORLD_CODE, API_DATE_FORMAT } from 'utils/globals'\nimport round from 'lodash/round'\nimport { ReactComponent as RawFastForwardIcon } from 'icons/fastForward.svg'\nimport { ReactComponent as RawPlayIcon } from 'icons/playArrow.svg'\nimport { ReactComponent as RawPauseIcon } from 'icons/pause.svg'\n\nconst Container = styled.div`\n  width: 100%;\n  position: absolute;\n  top: 0;\n  display: grid;\n  grid-template-columns: 20vw auto 20vw;\n  grid-template-areas: 'date slider avg';\n  align-items: center;\n  color: ${({ theme }) => theme.minLevel};\n  text-align: center;\n\n  @media only screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-areas:\n      'slider slider'\n      'date avg';\n  }\n`\n\nconst ControlsContainer = styled.div`\n  grid-area: slider;\n  display: flex;\n  flex-flow: row;\n`\n\nconst Slider = styled.input`\n  flex: 1;\n`\n\nconst TextContainer = styled.div`\n  grid-area: avg;\n  white-space: nowrap;\n  overflow: hidden;\n`\n\nconst DateContainer = styled.div`\n  grid-area: date;\n`\n\nconst Control = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst width = 40\nconst height = width\n\nconst PauseIcon = styled(RawPauseIcon).attrs(() => ({ width, height }))``\nconst PlayIcon = styled(RawPlayIcon).attrs(() => ({ width, height }))``\nconst FastForwardIcon = styled(RawFastForwardIcon).attrs(() => ({ width, height }))``\n\nconst REVERSE_ICONS: Record<number, React.ReactNode> = {\n  '-5': <PauseIcon />,\n  '-1': <FastForwardIcon transform='scale(-1, 1)' />,\n  0: <PlayIcon transform='scale(-1, 1)' />,\n  1: <PlayIcon transform='scale(-1, 1)' />,\n  5: <PlayIcon transform='scale(-1, 1)' />,\n}\n\nconst NEXT_REVERSE_SPEED: Record<number, number> = {\n  '-5': 0,\n  '-1': -5,\n  0: -1,\n  '1': -1,\n  '5': -1,\n}\n\nconst FORWARD_ICONS: Record<number, React.ReactNode> = {\n  '-5': <PlayIcon />,\n  '-1': <PlayIcon />,\n  0: <PlayIcon />,\n  '1': <FastForwardIcon />,\n  '5': <PauseIcon />,\n}\n\nconst NEXT_FORWARD_SPEED: Record<number, number> = {\n  '-5': 1,\n  '-1': 1,\n  0: 1,\n  '1': 5,\n  '5': 0,\n}\n\nexport const DateSelector = () => {\n  const { minDate, maxDate, focusDate, setFocusDate } = useSettings()\n  const [animationSpeed, setAnimationSpeed] = useState(0)\n\n  const worldData = useCases(useCallback((state) => state.countries[WORLD_CODE] || {}, []))\n\n  const averageNewCases = worldData[format(focusDate, API_DATE_FORMAT)] || 0\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const nextDate = addDays(focusDate, animationSpeed)\n      if (animationSpeed > 0 && nextDate <= maxDate) {\n        setFocusDate(nextDate)\n      } else if (animationSpeed < 0 && nextDate >= minDate) {\n        setFocusDate(nextDate)\n      } else if (animationSpeed < 0) {\n        setFocusDate(minDate)\n        setAnimationSpeed(0)\n      } else if (animationSpeed > 0) {\n        setFocusDate(maxDate)\n        setAnimationSpeed(0)\n      }\n    }, 100)\n    return () => clearInterval(interval)\n  }, [focusDate, animationSpeed])\n\n  const max = differenceInDays(maxDate, minDate)\n  const value = differenceInDays(focusDate, minDate)\n\n  const onChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setAnimationSpeed(0)\n    setFocusDate(addDays(minDate, parseInt(value)))\n  }\n\n  const setReverse = useCallback(() => setAnimationSpeed((speed) => NEXT_REVERSE_SPEED[speed]), [])\n  const setForward = useCallback(() => setAnimationSpeed((speed) => NEXT_FORWARD_SPEED[speed]), [])\n\n  return (\n    <Container>\n      <DateContainer>{format(focusDate, 'dd.MM.yyyy')}</DateContainer>\n      <ControlsContainer>\n        <Control onClick={setReverse} disabled={focusDate === minDate}>\n          {REVERSE_ICONS[animationSpeed]}\n        </Control>\n        <Slider type='range' min={0} max={max} value={value} onChange={onChange} />\n        <Control onClick={setForward} disabled={focusDate === maxDate}>\n          {FORWARD_ICONS[animationSpeed]}\n        </Control>\n      </ControlsContainer>\n      <TextContainer>avg {round(averageNewCases, 2)} new cases / million</TextContainer>\n    </Container>\n  )\n}\n","import { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport { Visuals } from './Visuals'\nimport { theme } from './utils/theme'\nimport reset from 'styled-reset'\nimport { useCountryData } from 'hooks/countries'\nimport { useCaseData } from 'hooks/cases'\nimport { DateSelector } from './DateSelector'\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  #root {\n    height: 100vh;\n    font-family: 'Roboto', sans-serif;\n  }\n`\n\nexport const App = () => {\n  useCountryData()\n  useCaseData()\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Visuals />\n      <DateSelector />\n    </ThemeProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}